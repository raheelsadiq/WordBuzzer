//
//  GameInteractor.swift
//  WordBuzzer
//
//  Created by Raheel Sadiq  on 09/02/2020.
//  Copyright (c) 2020 Raheel Sadiq . All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol GameBusinessLogic {
    func startMatch()
    func selected(option: String, by playerNumber: Int)
    func timedOut()
}

protocol GameDataStore {

}

class GameInteractor: GameBusinessLogic, GameDataStore {
    
    var presenter: GamePresentationLogic?
    var worker: GameWorker
    var words = [Game.Word]()
    let players: [Game.Player]
    var match: Game.Matct!
    let numberOfRounds = 10
    let numberOfOptions = 4
    let timeInterval = TimeInterval(3)
    
    var currentRound: Int = -1 {
        didSet{
            presenter?.presentPlayer(players: players)
            presenter?.present(round: match.rounds[currentRound])
        }
    }

    init() {
        worker = GameWorker()
        
        players = [
            Game.Player(score: 0),
            Game.Player(score: 0),
            Game.Player(score: 0),
            Game.Player(score: 0)
        ]
        
        DispatchQueue.global().async { [weak self] in
            self?.words = self?.worker.fetchWords() ?? []

        }
    }
    
    func startMatch() {
        
        var rounds = [Game.Round]()
        
        for _ in 0..<numberOfRounds {
            
            let randomWords = words.choose(numberOfOptions)
            let options = randomWords.map { (word) -> String in
                word.translation
            }
            
            let round = Game.Round(
                word: randomWords.first!.word,
                correctAnswer: randomWords.first!.translation,
                options: options.shuffled(),
                time: timeInterval)
            rounds.append(round)
        }
        
        match = Game.Matct(
            numberOfRounds: numberOfRounds,
            rounds: rounds)
        currentRound = 0
    }
    
    func selected(option: String, by playerNumber: Int) {
        
        let round = match.rounds[currentRound]
        if option == round.correctAnswer {
            presenter?.presentWinner(player: players[playerNumber])
        }else{
            presenter?.presentLoser(player: players[playerNumber])
        }
    }
    
    func timedOut(){
        
    }
}


